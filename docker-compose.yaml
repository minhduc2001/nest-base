version: '3.3'

services:
  database:
    container_name: pg_db
    image: postgres:13.6-alpine
    restart: always
    environment:
      TZ: 'Asia/Ho_Chi_Minh'
      PGTZ: 'Asia/Ho_Chi_Minh'
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./docker/db/postgres/data/:/var/lib/postgresql/data
      - ./docker/db/postgres/postgres.conf:/etc/postgresql/postgresql.conf
      - ./docker/db/postgres/init/:/docker-entrypoint-initdb.d
    env_file:
      - .env

  nest-base:
    container_name: nest-base
    image: nest-base
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: development # Only will build development stage from our dockerfile
    volumes:
      - ./:/usr/src/app
    ports:
      - ${PORT}:${PORT}
    networks:
      - nestjs-auth-intranet
    env_file:
      - .env # Available inside container not in compose file
    environment:
      - DB_HOST=database
    depends_on:
      data:
        condition: service_healthy
    command: npm run start:dev # Run in development mode

networks:
  nest-base-intranet:
    name: nest-base-intranet
    driver: bridge
